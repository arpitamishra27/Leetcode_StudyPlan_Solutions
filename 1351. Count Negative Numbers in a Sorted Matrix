'''
1351. Count Negative Numbers in a Sorted Matrix
Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.

 

Example 1:

Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]
Output: 8
Explanation: There are 8 negatives number in the matrix.
Example 2:

Input: grid = [[3,2],[1,0]]
Output: 0
 

Constraints:

m == grid.length
n == grid[i].length
1 <= m, n <= 100
-100 <= grid[i][j] <= 100
'''

class Solution:
    def countNegatives(self, grid: List[List[int]]) -> int:
        
        c=0
        def bins(row):
            
            l,r=0, len(row)
            
            while(l<r):
                mid=l+(r-l)//2
                if row[mid]<0:
                    r=mid
                else:
                    l=mid+1
                    
            return len(row)-l
        
        for row in grid:
            c+= bins(row)
        return c
